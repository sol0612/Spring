<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/uploadfile/**" location="/uploadfile/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>

	<context:component-scan
		base-package="com.bitcamp.op" />

	<interceptors>
		<interceptor>
			<mapping path="/member/**" />
			<mapping path="/guest/**" />
			<exclude-mapping path="/member/login" />
			<exclude-mapping path="/member/logout" />
			<exclude-mapping path="/member/memberReg" />
			<exclude-mapping path="/guest/list" />
			<exclude-mapping path="/guest/view" />
			<beans:bean
				class="com.bitcamp.op.interceptor.AuthCheckInterceptor" />
		</interceptor>
	</interceptors>

	<!-- dataSource 빈 등록 -->
	<!-- <beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
		<beans:property name="driverClass" value="oracle.jdbc.driver.OracleDriver" 
		/> <beans:property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1522:orcl" 
		/> <beans:property name="user" value="scott" /> <beans:property name="password" 
		value="1234" /> </beans:bean> -->		<!-- 오라클DB -->

	<!-- MySQL DB -->
	<beans:bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass"
			value="com.mysql.jdbc.Driver" />
		<beans:property name="jdbcUrl"
			value="jdbc:mysql://localhost/openproject?characterEncoding=utf8" />
		<beans:property name="user" value="bit" />
		<beans:property name="password" value="bit" />
	</beans:bean>

	<!-- jdbcTemplate 빈 등록 -->
	<beans:bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />

	<!-- 트랜잭션처리 <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<beans:property name="dataSource" ref="dataSource" /> </beans:bean> @Transactional 
		애노테이션 활성화 설정 <tx:annotation-driven transaction-manager="transactionManager" 
		/> -->


	<!-- MEMBER DAO 등록 -->
	<beans:bean id="memberDao"
		class="com.bitcamp.op.member.dao.MemberDao" />

	<!-- jdbcTemplateMemberDao 등록 -->
	<beans:bean id="jdbcTemplateMemberDao"
		class="com.bitcamp.op.member.dao.JdbcTemplateMemberDao" />
	<beans:bean id="jdbcTemplateMessageDao"
		class="com.bitcamp.op.guestbook.dao.JdbcTemplateMessageDao" />

	<!-- guestbook DAO 등록 -->
	<beans:bean id="messageDao"
		class="com.bitcamp.op.guestbook.dao.MessageDao" />


	<!-- member Service 등록 -->
	<beans:bean id="memberRegService"
		class="com.bitcamp.op.member.service.MemberRegService" />
	<beans:bean id="memberLoginService"
		class="com.bitcamp.op.member.service.MemberLoginService" />
	<beans:bean id="memberListService"
		class="com.bitcamp.op.member.service.MemberListService" />
	<beans:bean id="memberDeleteService"
		class="com.bitcamp.op.member.service.MemberDeleteService" />

	<!-- guestbook Service 등록 -->
	<beans:bean id="deleteMessageService"
		class="com.bitcamp.op.guestbook.service.DeleteMessageService" />
	<beans:bean id="getMessageListService"
		class="com.bitcamp.op.guestbook.service.GetMessageListService" />
	<beans:bean id="viewMessageService"
		class="com.bitcamp.op.guestbook.service.ViewmessageService" />
	<beans:bean id="WriteMessageService"
		class="com.bitcamp.op.guestbook.service.WriteMessageService" />

</beans:beans>
